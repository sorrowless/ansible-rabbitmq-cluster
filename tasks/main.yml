---
- name: Ensure cookie dir
  become: yes
  become_user: root
  file:
    path: "{{ cookie_dir }}"
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Ensure config dir
  become: yes
  become_user: root
  file:
    path: "{{ rabbitmq_config_dir }}"
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Ensure data dir
  become: yes
  become_user: root
  file:
    path: "{{ rabbitmq_config_dir }}/data"
    state: directory
    mode: 0755
    owner: "{{ rabbitmq_uid }}"
    group: "{{ rabbitmq_gid }}"

- name: Ensure config erlang cookie
  template:
    src: "cookie.j2"
    dest: "{{ rabbitmq_config_dir }}/data/.erlang.cookie"
    mode: "400"
    owner: "{{ rabbitmq_uid }}"
    group: root
  register: result_ensure_erlang_cookie

- name: Ensure entrypoint
  ansible.builtin.copy:
    src: ./files/cluster-entrypoint.sh
    dest: "{{ rabbitmq_config_dir }}/cluster-entrypoint.sh"
    mode: "770"
    owner: "{{ rabbitmq_uid }}"
  register: result_ensure_entrypoint

- name: Include docker-related rabbitmq tasks
  include_tasks: run_rabbitmq_in_docker.yml

- name: Get rmq container realname in swarm
  command: 
    argv:
      - /usr/bin/docker
      - ps
      - -a
      - -f
      - name={{ rabbitmq_stack_name }}_{{ rabbitmq_container_name }}
      - -f
      - status=running
      - --format
      - !unsafe "{{ .Names }}"
  register: real_container_name
  when: rabbitmq_swarm

- fail:
    msg: Real container name not found
  when: rabbitmq_swarm and ( real_container_name.stdout_lines | length == 0 )

- name: Set rmq container realname in swarm
  ansible.builtin.set_fact:
    rabbitmq_container_name: "{{ real_container_name.stdout_lines[0] }}"
  when: rabbitmq_swarm

- name: Waiting for start rabbitmq
  ansible.builtin.wait_for:
    port: "{{ rabbitmq_ampq_port }}"
    host: "{{ rabbitmq_listen_address }}"
    delay: 5
  when: result_container_start is changed

- name: Pause for 5 seconds for starting app
  ansible.builtin.pause:
    seconds: 25
  when: result_container_start is changed and (walg_rabbitmq_users_list is defined or rabbitmq_vhost_list is defined)

- name: Run command for create vhost
  community.docker.docker_container_exec:
    container: "{{ rabbitmq_container_name }}"
    command: "rabbitmqctl add_vhost {{ item }}"
  with_items: "{{ rabbitmq_vhost_list }}"

- name: Run command for create policy
  community.docker.docker_container_exec:
    container: "{{ rabbitmq_container_name }}"
    command: rabbitmqctl set_policy HA -p "{{ item }}" ".*" '{"ha-mode":"all","ha-sync-mode":"automatic"}'
  with_items: "{{ rabbitmq_vhost_list }}"

- name: Ensure rabbitmq users
  community.rabbitmq.rabbitmq_user:
    login_host: "{{ rabbitmq_login_host }}"
    login_port: "{{ rabbitmq_login_port }}"
    login_password: "{{ rabbitmq_login_password }}"
    login_user: "{{ rabbitmq_login_user }}"
    user: "{{ item.user }}"
    password: "{{ item.password }}"
    permissions:  "{{ item.permissions }}"
    state: present
  with_items: "{{ rabbitmq_users_list }}"

- name: Restart Docker container
  docker_container:
    name: "{{ rabbitmq_container_name }}"
    image: "{{ rabbitmq_image }}"
    state: started
  when: (result_ensure_erlang_cookie is changed or result_ensure_entrypoint is changed) and result_container_start is not changed
